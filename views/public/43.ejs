<%- include('../header') %>
        </br></br>
    <div class="title">
    <H1>—李の勉強NOTE</H1>
    </div>
    <div class="main">
    <H2>4.3 配置文件</H2>
    </div>
    <div class="to">
    </br>
    </div>
    <div class="text_eg">
  <div class="four wide column"></div>
  <div class="eight wide column">
<p>不管是小项目还是大项目，将配置与代码分离是一个非常好的做法。我们通常将配置写到一个配置文件里，如 config.js 或 config.json ，并放到项目的根目录下。但通常我们都会有许多环境，如本地开发环境、测试环境和线上环境等，不同的环境的配置不同，我们不可能每次部署时都要去修改引用 config.test.js 或者 config.production.js。config-lite 模块正是你需要的。</p>

<h2><a id="user-content-431-config-lite" class="anchor" href="#431-config-lite" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>4.3.1 config-lite</h2>

<p><a href="https://www.npmjs.com/package/config-lite">config-lite</a> 是一个轻量的读取配置文件的模块。config-lite 会根据环境变量（<div class="code">NODE_ENV</div>）的不同从当前执行进程目录下的 config 目录加载不同的配置文件。如果不设置 <div class="code">NODE_ENV</div>，则读取默认的 default 配置文件，如果设置了 <div class="code">NODE_ENV</div>，则会合并指定的配置文件和 default 配置文件作为配置，config-lite 支持 .js、.json、.node、.yml、.yaml 后缀的文件。</p>

<p>如果程序以 <div class="code">NODE_ENV=test node app</div> 启动，则通过 <div class="code">require('config-lite')</div> 会依次降级查找 <div class="code">config/test.js</div>、<div class="code">config/test.json</div>、<div class="code">config/test.node</div>、<div class="code">config/test.yml</div>、<div class="code">config/test.yaml</div> 并合并 default 配置; 如果程序以 <div class="code">NODE_ENV=production node app</div> 启动，则通过 <div class="code">require('config-lite')</div> 会依次降级查找 <div class="code">config/production.js</div>、<div class="code">config/production.json</div>、<div class="code">config/production.node</div>、<div class="code">config/production.yml</div>、<div class="code">config/production.yaml</div> 并合并 default 配置。</p>

<p>在 myblog 下新建 config 目录，在该目录下新建 default.js，添加如下代码：</p>

<p><strong>config/default.js</strong></p>

<div class="code">module.exports = {<br />
  port: 3000,<br />
  session: {<br />
    secret: 'myblog',<br />
    key: 'myblog',<br />
    maxAge: 2592000000<br />
  },<br />
  mongodb: 'mongodb://localhost:27017/myblog'<br />
};
</div>

<p>配置释义：</p>

<ol>
<li><div class="code">port</div>: 程序启动要监听的端口号</li>
<li><div class="code">session</div>: express-session 的配置信息，后面介绍</li>
<li><div class="code">mongodb</div>: mongodb 的地址，<div class="code">myblog</div> 为 db 名</li>
</ol>

<p>上一节：<a href="./42">4.2 准备工作</a></p>

<p>下一节：<a href="./44">4.4 功能设计</a></p>
<%- include('../footer') %>