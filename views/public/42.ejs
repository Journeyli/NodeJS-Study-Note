<%- include('../header') %>
        </br></br>
    <div class="title">
    <H1>—李の勉強NOTE</H1>
    </div>
    <div class="main">
    <H2>4.2 准备工作</H2>
    </div>
    <div class="to">
    </br>
    </div>
    <div class="text_eg">
  <div class="four wide column"></div>
  <div class="eight wide column">
<h2><a id="user-content-421-目录结构" class="anchor" href="#421-目录结构" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>4.2.1 目录结构</h2>

<p>我们停止 supervisor 并删除 myblog 目录从头来过。重新创建 myblog，运行 <div class="code">npm init</div>，如下：</p>

<p><a href="/img/book/4.2.1.png" target="_blank"><img src="/img/book/4.2.1.png" alt="" style="max-width:100%;"></a></p>

<p>在 myblog 目录下创建以下目录及空文件（package.json 除外）：</p>

<p><a href="/img/book/4.2.2.png" target="_blank"><img src="/img/book/4.2.2.png" alt="" style="max-width:100%;"></a></p>

<p>对应文件及文件夹的用处：</p>

<ol>
<li><div class="code">models</div>: 存放操作数据库的文件</li>
<li><div class="code">public</div>: 存放静态文件，如样式、图片等</li>
<li><div class="code">routes</div>: 存放路由文件</li>
<li><div class="code">views</div>: 存放模板文件</li>
<li><div class="code">index.js</div>: 程序主文件</li>
<li><div class="code">package.json</div>: 存储项目名、描述、作者、依赖等等信息</li>
</ol>

<blockquote>
<p>小提示：不知读者发现了没有，我们遵循了 MVC（模型(model)－视图(view)－控制器(controller/route)） 的开发模式。</p>
</blockquote>

<h2><a id="user-content-422-安装依赖模块" class="anchor" href="#422-安装依赖模块" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>4.2.2 安装依赖模块</h2>

<p>运行以下命令安装所需模块：</p>

<div class="code">npm i config-lite connect-flash connect-mongo ejs express express-formidable express-session marked moment mongolass objectid-to-timestamp sha1 winston express-winston --save
</div>

<p>对应模块的用处：</p>

<ol>
<li><div class="code">express</div>: web 框架</li>
<li><div class="code">express-session</div>: session 中间件</li>
<li><div class="code">connect-mongo</div>: 将 session 存储于 mongodb，结合 express-session 使用</li>
<li><div class="code">connect-flash</div>: 页面通知提示的中间件，基于 session 实现</li>
<li><div class="code">ejs</div>: 模板</li>
<li><div class="code">express-formidable</div>: 接收表单及文件的上传中间件</li>
<li><div class="code">config-lite</div>: 读取配置文件</li>
<li><div class="code">marked</div>: markdown 解析</li>
<li><div class="code">moment</div>: 时间格式化</li>
<li><div class="code">mongolass</div>: mongodb 驱动</li>
<li><div class="code">objectid-to-timestamp</div>: 根据 ObjectId 生成时间戳</li>
<li><div class="code">sha1</div>: sha1 加密，用于密码加密</li>
<li><div class="code">winston</div>: 日志</li>
<li><div class="code">express-winston</div>: 基于 winston 的用于 express 的日志中间件</li>
</ol>

<p>后面会详细讲解这些模块的用处。</p>

<p>上一节：<a href="./41">4.1 开发环境</a></p>

<p>下一节：<a href="./43">4.3 配置文件</a></p>
<%- include('../footer') %>